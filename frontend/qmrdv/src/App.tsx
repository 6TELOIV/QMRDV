import React from 'react';
import './App.css';
import Graph from "react-graph-vis";
import Markdown from 'markdown-to-jsx';

const WebSocketURI: string = 'wss://vrrvgmqs2g.execute-api.us-east-1.amazonaws.com/Test'

class App extends React.Component {

  state: {
    ws: WebSocket | null;
    ready: boolean;
    md: string;
    graph: any;
  }

  constructor(props: any) {
    super(props);
    this.state = {
      ws: null,
      ready: false,
      md: `
\`\`\`
         ┌───┐┌───────────────┐ ░ ┌───────────────┐ ░ ┌───────────────┐ ░ ┌───────────────┐ ░ ┌────────────────┐ ░ ┌────────────────┐ ░ ┌────────┐┌─┐               
 q_0: |0>┤ H ├┤0              ├─░─┤0              ├─░─┤0              ├─░─┤0              ├─░─┤0               ├─░─┤0               ├─░─┤0       ├┤M├───────────────
         ├───┤│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░ │        │└╥┘┌─┐            
 q_1: |0>┤ H ├┤1              ├─░─┤1              ├─░─┤1              ├─░─┤1              ├─░─┤1               ├─░─┤1               ├─░─┤1       ├─╫─┤M├────────────
         ├───┤│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░ │        │ ║ └╥┘┌─┐         
 q_2: |0>┤ H ├┤2              ├─░─┤2              ├─░─┤2              ├─░─┤2              ├─░─┤2               ├─░─┤2               ├─░─┤2       ├─╫──╫─┤M├─────────
         ├───┤│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░ │  I-QFT │ ║  ║ └╥┘┌─┐      
 q_3: |0>┤ H ├┤3              ├─░─┤3              ├─░─┤3              ├─░─┤3              ├─░─┤3               ├─░─┤3               ├─░─┤3       ├─╫──╫──╫─┤M├──────
         ├───┤│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░ │        │ ║  ║  ║ └╥┘┌─┐   
 q_4: |0>┤ H ├┤4              ├─░─┤4              ├─░─┤4              ├─░─┤4              ├─░─┤4               ├─░─┤4               ├─░─┤4       ├─╫──╫──╫──╫─┤M├───
         ├───┤│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░ │        │ ║  ║  ║  ║ └╥┘┌─┐
 q_5: |0>┤ H ├┤5              ├─░─┤5              ├─░─┤5              ├─░─┤5              ├─░─┤5               ├─░─┤5               ├─░─┤5       ├─╫──╫──╫──╫──╫─┤M├
         ├───┤│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░ └────────┘ ║  ║  ║  ║  ║ └╥┘
 q_6: |0>┤ X ├┤6              ├─░─┤6              ├─░─┤6              ├─░─┤6              ├─░─┤6               ├─░─┤6               ├─░────────────╫──╫──╫──╫──╫──╫─
         ├───┤│  C-U-pow(2,1) │ ░ │  C-U-pow(2,2) │ ░ │  C-U-pow(2,4) │ ░ │  C-U-pow(2,8) │ ░ │  C-U-pow(2,16) │ ░ │  C-U-pow(2,32) │ ░            ║  ║  ║  ║  ║  ║ 
 q_7: |0>┤ X ├┤7              ├─░─┤7              ├─░─┤7              ├─░─┤7              ├─░─┤7               ├─░─┤7               ├─░────────────╫──╫──╫──╫──╫──╫─
         └───┘│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░            ║  ║  ║  ║  ║  ║ 
 q_8: |0>─────┤8              ├─░─┤8              ├─░─┤8              ├─░─┤8              ├─░─┤8               ├─░─┤8               ├─░────────────╫──╫──╫──╫──╫──╫─
              │               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░            ║  ║  ║  ║  ║  ║ 
 q_9: |0>─────┤9              ├─░─┤9              ├─░─┤9              ├─░─┤9              ├─░─┤9               ├─░─┤9               ├─░────────────╫──╫──╫──╫──╫──╫─
              │               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░            ║  ║  ║  ║  ║  ║ 
q_10: |0>─────┤10             ├─░─┤10             ├─░─┤10             ├─░─┤10             ├─░─┤10              ├─░─┤10              ├─░────────────╫──╫──╫──╫──╫──╫─
         ┌───┐│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░            ║  ║  ║  ║  ║  ║ 
q_11: |0>┤ X ├┤11             ├─░─┤11             ├─░─┤11             ├─░─┤11             ├─░─┤11              ├─░─┤11              ├─░────────────╫──╫──╫──╫──╫──╫─
         ├───┤│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░            ║  ║  ║  ║  ║  ║ 
q_12: |0>┤ X ├┤12             ├─░─┤12             ├─░─┤12             ├─░─┤12             ├─░─┤12              ├─░─┤12              ├─░────────────╫──╫──╫──╫──╫──╫─
         └───┘│               │ ░ │               │ ░ │               │ ░ │               │ ░ │                │ ░ │                │ ░            ║  ║  ║  ║  ║  ║ 
q_13: |0>─────┤13             ├─░─┤13             ├─░─┤13             ├─░─┤13             ├─░─┤13              ├─░─┤13              ├─░────────────╫──╫──╫──╫──╫──╫─
              └───────────────┘ ░ └───────────────┘ ░ └───────────────┘ ░ └───────────────┘ ░ └────────────────┘ ░ └────────────────┘ ░            ║  ║  ║  ║  ║  ║ 
  c_0: 0 ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╩══╬══╬══╬══╬══╬═
                                                                                                                                                      ║  ║  ║  ║  ║ 
  c_1: 0 ═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╩══╬══╬══╬══╬═
                                                                                                                                                         ║  ║  ║  ║ 
  c_2: 0 ════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╩══╬══╬══╬═
                                                                                                                                                            ║  ║  ║ 
  c_3: 0 ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╩══╬══╬═
                                                                                                                                                               ║  ║ 
  c_4: 0 ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╩══╬═
                                                                                                                                                                  ║ 
  c_5: 0 ═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╩═
                                                                                                                                                                  
\`\`\``,
      graph: {
        nodes: [
          { id: 1, label: "Node 1", title: "node 1 tootip text" },
          { id: 2, label: "Node 2", title: "node 2 tootip text" },
          { id: 3, label: "Node 3", title: "node 3 tootip text" },
          { id: 4, label: "Node 4", title: "node 4 tootip text" }
        ],
        edges: [
          { from: 1, to: 2, weight: 1 },
          { from: 1, to: 3, weight: 2 },
          { from: 1, to: 4, weight: 2 },
          { from: 2, to: 3, weight: 3 },
          { from: 2, to: 4, weight: 3 },
          { from: 3, to: 4, weight: 3 }
        ]
      },
    }
  }

  connect(): void {
    let ws = new WebSocket(WebSocketURI)
    if (this.state.ws !== null) {
      this.state.ws.close();
    }
    this.setState({
      ws: ws,
      ready: false
    });
    ws.onmessage = (ev: MessageEvent): any => {
      console.log(JSON.parse(ev.data));
    };
    ws.onopen = (ev: Event): any => {
      this.setState({
        ready: true
      });
    };
  }
  compute(): void {
    if (this.state.ws !== null && this.state.ws.readyState === WebSocket.OPEN) {
      //let g: any = [];
      this.state.ws.send(JSON.stringify({
        action: 'compute',
        graph: "[[0.0, 1.5707963267948966, 0.39269908169872414, 0.7853981633974483], [1.5707963267948966, 0.0, 0.7853981633974483, 0.7853981633974483], [0.39269908169872414, 0.7853981633974483, 0.0, 0.39269908169872414], [0.7853981633974483, 0.7853981633974483, 0.39269908169872414, 0.0]]"//JSON.stringify(g)
      }));
    }
  }
  disconnect(): void {
    if (this.state.ws !== null) {
      this.state.ws.close();
    }
    this.setState({
      ws: null,
      ready: false
    });
  }
  render(): React.ReactElement {
    return (
      <div className="App">
        <Markdown>{this.state.md}</Markdown>
        <div>
          <button onClick={this.connect.bind(this)}>
            {this.state.ws ? 'Reconnect' : 'Connect'}
          </button>
          <button disabled={(!this.state.ws || !this.state.ready)} onClick={this.compute.bind(this)}>
            Compute
        </button>
          <button disabled={!this.state.ws} onClick={this.disconnect.bind(this)}>
            Disconnect
        </button>
        </div>
        <Graph graph={this.state.graph} options={{
          edges: {
            color: "#000000"
          },
          height: "500px"
        }} />
      </div>
    );
  }
}

export default App;
